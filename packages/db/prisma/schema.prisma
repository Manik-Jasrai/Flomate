generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   Int @id @default(autoincrement())
  username String
  password String
  flows Flow[]
}

model Flow {
  id        String     @id @default(uuid())
  triggerId String
  trigger   Trigger?
  action    Action[]
  flowRuns  FlowRun[]
  userId    Int
  user      User @relation(fields: [userId], references: [id])
}

model Trigger {
  id        String           @id @default(uuid())
  flowId    String           @unique
  flow      Flow             @relation(fields: [flowId], references: [id])
  triggerId String
  type      AvailableTrigger @relation(fields: [triggerId], references: [id])
}

model AvailableTrigger {
  id      String    @id @default(uuid())
  name    String    @unique
  trigger Trigger[]
}

model Action {
  id           String          @id @default(uuid())
  flowId       String          @unique
  flow         Flow            @relation(fields: [flowId], references: [id])
  actionId     String
  type         AvailableAction @relation(fields: [actionId], references: [id])
  sortingOrder Int             @default(0)
  metaData     Json            @default("{}")
}
model AvailableAction {
  id     String     @id @default(uuid())
  name   String     @unique
  action Action[]
}

model FlowRun {
  id            String          @id @default(uuid())
  flowId        String
  flow          Flow            @relation(fields: [flowId], references: [id])
  flowRunOutBox FlowRunOutBox?
}

model FlowRunOutBox {
  id        String  @id @default(uuid())
  flowRunId String  @unique
  flowRun   FlowRun @relation(fields: [flowRunId], references: [id])
}